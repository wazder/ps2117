# Database Configuration
# For Render deployment, use DATABASE_URL environment variable
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/ecom177}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=${DATABASE_USERNAME:wazder}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# Render PostgreSQL SSL Configuration
spring.datasource.hikari.connection-init-sql=SELECT 1
spring.datasource.hikari.connection-test-query=SELECT 1

# JPA Configuration
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.hibernate.ddl-auto=create
spring.jpa.open-in-view=false

# Liquibase Configuration
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.enabled=false

# JWT Configuration
app.jwt.secret=${JWT_SECRET:ecom177-super-secret-jwt-key-for-production-use-environment-variable}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}

# File Upload Configuration
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.enabled=true
server.tomcat.max-swallow-size=30MB
server.max-http-header-size=40MB

# Server Configuration
server.port=${PORT:8080}
server.error.include-message=always
server.error.include-binding-errors=always

# CORS Configuration
app.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:3001}

# Management & Monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Application Info
info.app.name=E-Commerce Application
info.app.description=Full-stack e-commerce application with Spring Boot and React
info.app.version=1.0.0
info.app.author=Hasan Tatar